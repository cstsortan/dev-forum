!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(4);t.CustomElement=(e=>t=>{if(o.validateSelector(e.selector),!e.template)throw new Error("You need to pass a template for the element");const n=document.createElement("template");e.style&&(e.template=`<style>${e.style}</style> ${e.template}`),n.innerHTML=e.template;const r=t.prototype.connectedCallback||function(){},l=t.prototype.disconnectedCallback||function(){};t.prototype.connectedCallback=function(){const t=document.importNode(n.content,!0);e.useShadow?this.attachShadow({mode:"open"}).appendChild(t):this.appendChild(t),this.componentWillMount&&this.componentWillMount(),r.call(this),this.componentDidMount&&this.componentDidMount()},t.prototype.disconnectedCallback=function(){this.componentWillUnmount&&this.componentWillUnmount(),l.call(this),this.componentDidUnmount&&this.componentDidUnmount()},window.customElements.define(e.selector,t)})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(2);new class{constructor(){}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(3),n(5),n(6)},function(e,t,n){"use strict";var o=this&&this.__decorate||function(e,t,n,o){var r,l=arguments.length,i=l<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(l<3?r(i):l>3?r(t,n,i):r(t,n))||i);return l>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});let r=class extends HTMLElement{constructor(){super(...arguments),this.globalCounter=0}componentWillMount(){this.addCounterBtn=this.shadowRoot.querySelector("flat-btn"),this.globalCounterH1=this.shadowRoot.querySelector("h1"),this.addListenners()}addListenners(){this.addCounterBtn.addEventListener("click",e=>{this.addCounter()})}addCounter(){const e=document.createElement("app-counter");e.addEventListener("counterIncreased",e=>{this.globalCounter++,this.renderGlobalCounter()}),e.addEventListener("counterDeleted",t=>{this.globalCounter-=t.detail,this.renderGlobalCounter(),this.shadowRoot.removeChild(e)}),this.shadowRoot.appendChild(e)}renderGlobalCounter(){this.globalCounterH1.textContent=this.globalCounter.toString()}};r=o([n(0).CustomElement({selector:"app-root",template:'\n        <div>\n            <h1>0</h1>\n            <flat-btn color="primary">Add Counter</flat-btn>\n        </div>\n    ',style:"\n        :host {\n            display: block;\n        }\n    ",useShadow:!0})],r)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateSelector=(e=>{if(e.indexOf("-")<=0)throw new Error("You need at least 1 dash in the custom element name!")})},function(e,t,n){"use strict";var o=this&&this.__decorate||function(e,t,n,o){var r,l=arguments.length,i=l<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(l<3?r(i):l>3?r(t,n,i):r(t,n))||i);return l>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});let r=class extends HTMLElement{constructor(){super(...arguments),this.counter=0}connectedCallback(){this.addBtn=this.shadowRoot.querySelector("#addBtn"),this.counterDiv=this.shadowRoot.querySelector("#counter"),this.deleteBtn=this.shadowRoot.querySelector(".deleteBtn"),this.initializeCounterState(),this.addListenners()}initializeCounterState(){this.counter=0}addListenners(){this.addBtn&&this.deleteBtn&&(this.addBtn.addEventListener("click",()=>{this.counter++,this.renderCounter(),this.dispatchEvent(new CustomEvent("counterIncreased",{}))}),this.deleteBtn.addEventListener("click",()=>{this.dispatchEvent(new CustomEvent("counterDeleted",{detail:this.counter}))}))}renderCounter(){this.counterDiv&&(this.counterDiv.innerText=this.counter.toString())}};r=o([n(0).CustomElement({selector:"app-counter",template:'\n    <div class="card">\n        <div class="card-header">\n            This is some cool card <span><flat-btn class="deleteBtn" color="danger">x</flat-btn></span>\n        </div>\n        <div id="counter" class="counter-display">\n            0\n        </div>\n        <div class="card-footer">\n            <flat-btn color="primary" class="addBtn" id="addBtn">\n                +\n            </flat-btn>\n        </div>\n    </div>\n    ',useShadow:!0,style:"\n        .card {\n            padding: 10px;\n            margin: 10px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border: #C1C1C1 solid 1px;\n            border-radius: 4px;\n        }\n        .deleteBtn {\n            display: inline-block;\n        }\n        .counter-display {\n            font-size: 35px;\n        }\n    "})],r),t.AppCounter=r},function(e,t,n){"use strict";var o=this&&this.__decorate||function(e,t,n,o){var r,l=arguments.length,i=l<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(l<3?r(i):l>3?r(t,n,i):r(t,n))||i);return l>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0});let r=class extends HTMLElement{constructor(){super(...arguments),this.color=""}componentWillMount(){this.btnElem=this.shadowRoot.querySelector("button.btn"),this.btnElem.classList.add(this.getAttribute("color")||"")}};r=o([n(0).CustomElement({selector:"flat-btn",template:'\n        <button class="btn">\n            <slot></slot>\n        </button>\n    ',useShadow:!0,style:"\n    :host {\n        display:block;\n    }\n    .btn {\n        border: none;\n        border-radius: 3px;\n        padding: 6px 16px;\n        color: white;\n    }\n    .primary {\n        background-color: var(--primary-color);\n    }\n\n    .secondary {\n        background-color: var(--secondary-color);\n    }\n\n    .danger {\n        background-color: var(--danger-color);\n    }\n    "})],r),t.FlatBtn=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,